# Generated by Django 2.1.4 on 2019-02-08 09:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=100, verbose_name='First name ')),
                ('mname', models.CharField(max_length=100, verbose_name='Middle name ')),
                ('lname', models.CharField(max_length=100, verbose_name='Last name ')),
                ('date_recorded', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Academic', models.CharField(choices=[('85', 'Doctoral Degree'), ('65', 'Masters Degree'), ('45', 'Bachelors Degree')], default='', help_text='Highest academic degree or educational attainment in the field of study', max_length=4, verbose_name='Highest degree attainment ')),
                ('Special', models.BooleanField(help_text='e.g. Technical/Technician', verbose_name='Special Course ')),
                ('Additional1', models.BooleanField(help_text='Graduate of five-year Engineering Degree', verbose_name='additional 5 points')),
                ('Additional2', models.BooleanField(help_text='Licensure Exam', verbose_name='additional 5 points')),
                ('Degree', models.CharField(choices=[('5', 'Doctorals Degree'), ('4', 'Masters Degree'), ('3', 'Bachelors Degree')], default='', help_text='Additional Equivalent degree earned, related to the present position', max_length=3, verbose_name='Question 1 ')),
                ('Additional3', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned toward a higher approved degree course', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 2 ')),
                ('Additional4', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned on the same level', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 3 ')),
                ('A1', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in a state institution of higher learning', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 4 ')),
                ('A2', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in any public or private educational institution other than SUC', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 5 ')),
                ('A3', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Computer Analyst ')),
                ('A4', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Software Engineer ')),
                ('A5', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Senior Programmer ')),
                ('A6', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Junior Programmer ')),
                ('A7', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Computer Encoder ')),
                ('A8', models.PositiveIntegerField(default=0, help_text='for every cost and timesaving innovation, patented inventions and creative work as well as discovery of educational,technical,scientific and/or cultural value', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 6 ')),
                ('A9', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as original author ')),
                ('A10', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as co-author ')),
                ('A11', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as reviewer ')),
                ('A12', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as translator ')),
                ('A13', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as editor ')),
                ('A14', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as compiler ')),
                ('A15', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='International ')),
                ('A16', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='National/Regional ')),
                ('A17', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('A18', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every Instructional Manual/Audio-Visual Materials ')),
                ('A19', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('A20', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('A21', models.PositiveIntegerField(default=0, help_text='For every training course with a duration of at least (pro-rated for less than a year)', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('A22', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('A23', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('A24', models.PositiveIntegerField(default=0, help_text='For participation as a consultant, expert in any activity of an educational, technological, professional, scientific, or cultural nature (abroad and local) sponsored by the government or other agencies ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('A25', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('A26', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('A27', models.PositiveIntegerField(default=0, help_text='For participation as coordinator,lecturer,resource person or guest speaker in conferences,workshops and/or training', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('A28', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('A29', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('A30', models.PositiveIntegerField(default=0, help_text='For official participation in conferences, seminar, workshops ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('A31', models.PositiveIntegerField(default=0, help_text='For expert services as adviser in doctoral dissertation and masteral thesis and undergraduate thesis ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='expert services')),
                ('A32', models.PositiveIntegerField(default=0, help_text='1/120 hrs ', validators=[django.core.validators.MaxValueValidator(10000)], verbose_name='For certified training')),
                ('A33', models.PositiveIntegerField(default=0, help_text='National', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.Offical ')),
                ('A34', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('A35', models.PositiveIntegerField(default=0, help_text='Member', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.Member ')),
                ('A36', models.CharField(choices=[('0', 'None'), ('3', 'Summa Cum Laude'), ('2', 'Magna Cum Laude'), ('1', 'Cum Laude'), ('0.5', 'With distinction')], default='', max_length=5, verbose_name='For undergraduate academic honors earned:')),
                ('A37', models.PositiveIntegerField(default=0, help_text='Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, International ')),
                ('A38', models.PositiveIntegerField(default=0, help_text='Non-Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, International ')),
                ('A39', models.PositiveIntegerField(default=0, help_text='Competitive National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive National/Regional ')),
                ('A40', models.PositiveIntegerField(default=0, help_text='Non-Competitive, National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='on-Competitive, National/Regional ')),
                ('A41', models.PositiveIntegerField(default=0, help_text='Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, Local ')),
                ('A42', models.PositiveIntegerField(default=0, help_text='Non-Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, Local ')),
                ('A43', models.PositiveIntegerField(default=0, help_text='International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('A44', models.PositiveIntegerField(default=0, help_text='National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('A45', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('A46', models.PositiveIntegerField(default=0, help_text='For every year of participation in service-oriented project in the community', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every year of participation in service-oriented project in the community')),
                ('A47', models.PositiveIntegerField(default=0, help_text='First Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='1.First Level ')),
                ('A48', models.PositiveIntegerField(default=0, help_text='Second Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='2.Second Level ')),
                ('A49', models.PositiveIntegerField(default=0, help_text='Others', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='3.Others ')),
                ('Average', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Demo-Average ')),
                ('Evaluator', models.CharField(max_length=100, verbose_name='Evaluator ')),
                ('Voice_speech', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Voice and Speech')),
                ('Appearance', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Appearance')),
                ('Alertness', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Alertness')),
                ('Ability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Ability to Present Ideas')),
                ('Judgement', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Judgement')),
                ('Emotional_stability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Emotional Stability')),
                ('Self_confidence', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Self-Confidence')),
                ('Interviewer', models.CharField(max_length=100, verbose_name='Interviewer ')),
                ('total', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user ')),
            ],
            options={
                'verbose_name': 'Instructor I - Computer Science / IT',
                'verbose_name_plural': 'Instructor I - Computer Science / IT',
            },
        ),
        migrations.CreateModel(
            name='Architect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=100, verbose_name='First name ')),
                ('mname', models.CharField(max_length=100, verbose_name='Middle name ')),
                ('lname', models.CharField(max_length=100, verbose_name='Last name ')),
                ('date_recorded', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Academic', models.CharField(choices=[('85', 'Doctoral Degree'), ('65', 'Masters Degree'), ('45', 'Bachelors Degree')], default='', help_text='Highest academic degree or educational attainment in the field of study', max_length=4, verbose_name='Highest degree attainment ')),
                ('Special', models.BooleanField(help_text='e.g. Technical/Technician', verbose_name='Special Course ')),
                ('Additional1', models.BooleanField(help_text='Graduate of five-year Engineering Degree', verbose_name='additional 5 points')),
                ('Additional2', models.BooleanField(help_text='Licensure Exam', verbose_name='additional 5 points')),
                ('Degree', models.CharField(choices=[('5', 'Doctorals Degree'), ('4', 'Masters Degree'), ('3', 'Bachelors Degree')], default='', help_text='Additional Equivalent degree earned, related to the present position', max_length=3, verbose_name='Question 1 ')),
                ('Additional3', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned toward a higher approved degree course', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 2 ')),
                ('Additional4', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned on the same level', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 3 ')),
                ('E1', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in a state institution of higher learning', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 4 ')),
                ('E2', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in any public or private educational institution other than SUC', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 5 ')),
                ('E3', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Project Engineer ')),
                ('E4', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Architectural/Interior Design ')),
                ('E5', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Supervising Draftsman/Architect ')),
                ('E6', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='General Draftsman ')),
                ('E7', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Draftsman ')),
                ('E8', models.PositiveIntegerField(default=0, help_text='for every cost and timesaving innovation, patented inventions and creative work as well as discovery of educational,technical,scientific and/or cultural value', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 6 ')),
                ('E9', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as original author ')),
                ('E10', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as co-author ')),
                ('E11', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as reviewer ')),
                ('E12', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as translator ')),
                ('E13', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as editor ')),
                ('E14', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as compiler ')),
                ('E15', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='International ')),
                ('E16', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='National/Regional ')),
                ('E17', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('E18', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every Instructional Manual/Audio-Visual Materials ')),
                ('E19', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('E20', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('E21', models.PositiveIntegerField(default=0, help_text='For every training course with a duration of at least (pro-rated for less than a year)', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('E22', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('E23', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('E24', models.PositiveIntegerField(default=0, help_text='For participation as a consultant, expert in any activity of an educational, technological, professional, scientific, or cultural nature (abroad and local) sponsored by the government or other agencies ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('E25', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('E26', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('E27', models.PositiveIntegerField(default=0, help_text='For participation as coordinator,lecturer,resource person or guest speaker in conferences,workshops and/or training', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('E28', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('E29', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('E30', models.PositiveIntegerField(default=0, help_text='For official participation in conferences, seminar, workshops ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('E31', models.PositiveIntegerField(default=0, help_text='For expert services as adviser in doctoral dissertation and masteral thesis and undergraduate thesis ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='expert services')),
                ('E32', models.PositiveIntegerField(default=0, help_text='1/120 hrs ', validators=[django.core.validators.MaxValueValidator(10000)], verbose_name='For certified training')),
                ('E33', models.PositiveIntegerField(default=0, help_text='National', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.Offical ')),
                ('E34', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('E35', models.PositiveIntegerField(default=0, help_text='Member', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.Member ')),
                ('E36', models.CharField(choices=[('0', 'None'), ('3', 'Summa Cum Laude'), ('2', 'Magna Cum Laude'), ('1', 'Cum Laude'), ('0.5', 'With distinction')], default='', max_length=5, verbose_name='For undergraduate academic honors earned:')),
                ('E37', models.PositiveIntegerField(default=0, help_text='Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, International ')),
                ('E38', models.PositiveIntegerField(default=0, help_text='Non-Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, International ')),
                ('E39', models.PositiveIntegerField(default=0, help_text='Competitive National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive National/Regional ')),
                ('E40', models.PositiveIntegerField(default=0, help_text='Non-Competitive, National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='on-Competitive, National/Regional ')),
                ('E41', models.PositiveIntegerField(default=0, help_text='Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, Local ')),
                ('E42', models.PositiveIntegerField(default=0, help_text='Non-Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, Local ')),
                ('E43', models.PositiveIntegerField(default=0, help_text='International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('E44', models.PositiveIntegerField(default=0, help_text='National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('E45', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('E46', models.PositiveIntegerField(default=0, help_text='For every year of participation in service-oriented project in the community', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every year of participation in service-oriented project in the community')),
                ('E47', models.PositiveIntegerField(default=0, help_text='First Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='1.First Level ')),
                ('E48', models.PositiveIntegerField(default=0, help_text='Second Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='2.Second Level ')),
                ('E49', models.PositiveIntegerField(default=0, help_text='Others', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='3.Others ')),
                ('Average', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Demo-Average ')),
                ('Evaluator', models.CharField(max_length=100, verbose_name='Evaluator ')),
                ('Voice_speech', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Voice and Speech')),
                ('Appearance', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Appearance')),
                ('Alertness', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Alertness')),
                ('Ability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Ability to Present Ideas')),
                ('Judgement', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Judgement')),
                ('Emotional_stability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Emotional Stability')),
                ('Self_confidence', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Self-Confidence')),
                ('Interviewer', models.CharField(max_length=100, verbose_name='Interviewer ')),
                ('total', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user ')),
            ],
            options={
                'verbose_name_plural': 'Instructor I - Architect/Draffting Instructor',
            },
        ),
        migrations.CreateModel(
            name='Civil_Engr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=100, verbose_name='First name ')),
                ('mname', models.CharField(max_length=100, verbose_name='Middle name ')),
                ('lname', models.CharField(max_length=100, verbose_name='Last name ')),
                ('date_recorded', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Academic', models.CharField(choices=[('85', 'Doctoral Degree'), ('65', 'Masters Degree'), ('45', 'Bachelors Degree')], default='', help_text='Highest academic degree or educational attainment in the field of study', max_length=4, verbose_name='Highest degree attainment ')),
                ('Special', models.BooleanField(help_text='e.g. Technical/Technician', verbose_name='Special Course ')),
                ('Additional1', models.BooleanField(help_text='Graduate of five-year Engineering Degree', verbose_name='additional 5 points')),
                ('Additional2', models.BooleanField(help_text='Licensure Exam', verbose_name='additional 5 points')),
                ('Degree', models.CharField(choices=[('5', 'Doctorals Degree'), ('4', 'Masters Degree'), ('3', 'Bachelors Degree')], default='', help_text='Additional Equivalent degree earned, related to the present position', max_length=3, verbose_name='Question 1 ')),
                ('Additional3', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned toward a higher approved degree course', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 2 ')),
                ('Additional4', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned on the same level', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 3 ')),
                ('B1', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in a state institution of higher learning', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 4 ')),
                ('B2', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in any public or private educational institution other than SUC', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 5 ')),
                ('B3', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Project Engineer/Project Manager ')),
                ('B4', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Structural/Design Engineer ')),
                ('B5', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Supervising Engineer ')),
                ('B6', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Construction Engineer ')),
                ('B7', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Field Engineer ')),
                ('B8', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Sustaining Engineer ')),
                ('B9', models.PositiveIntegerField(default=0, help_text='for every cost and timesaving innovation, patented inventions and creative work as well as discovery of educational,technical,scientific and/or cultural value', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 6 ')),
                ('B10', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as original author ')),
                ('B11', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as co-author ')),
                ('B12', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as reviewer ')),
                ('B13', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as translator ')),
                ('B14', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as editor ')),
                ('B15', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as compiler ')),
                ('B16', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='International ')),
                ('B17', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='National/Regional ')),
                ('B18', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('B19', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every Instructional Manual/Audio-Visual Materials ')),
                ('B20', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('B21', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('B22', models.PositiveIntegerField(default=0, help_text='For every training course with a duration of at least (pro-rated for less than a year)', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('B23', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('B24', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('B25', models.PositiveIntegerField(default=0, help_text='For participation as a consultant, expert in any activity of an educational, technological, professional, scientific, or cultural nature (abroad and local) sponsored by the government or other agencies ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('B26', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('B27', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('B28', models.PositiveIntegerField(default=0, help_text='For participation as coordinator,lecturer,resource person or guest speaker in conferences,workshops and/or training', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('B29', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('B30', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('B31', models.PositiveIntegerField(default=0, help_text='For official participation in conferences, seminar, workshops ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('B32', models.PositiveIntegerField(default=0, help_text='For expert services as adviser in doctoral dissertation and masteral thesis and undergraduate thesis ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='expert services')),
                ('B33', models.PositiveIntegerField(default=0, help_text='1/120 hrs ', validators=[django.core.validators.MaxValueValidator(10000)], verbose_name='For certified training')),
                ('B34', models.PositiveIntegerField(default=0, help_text='National', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.Offical ')),
                ('B35', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('B36', models.PositiveIntegerField(default=0, help_text='Member', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.Member ')),
                ('B37', models.CharField(choices=[('0', 'None'), ('3', 'Summa Cum Laude'), ('2', 'Magna Cum Laude'), ('1', 'Cum Laude'), ('0.5', 'With distinction')], default='', max_length=5, verbose_name='For undergraduate academic honors earned:')),
                ('B38', models.PositiveIntegerField(default=0, help_text='Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, International ')),
                ('B39', models.PositiveIntegerField(default=0, help_text='Non-Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, International ')),
                ('B40', models.PositiveIntegerField(default=0, help_text='Competitive National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive National/Regional ')),
                ('B41', models.PositiveIntegerField(default=0, help_text='Non-Competitive, National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='on-Competitive, National/Regional ')),
                ('B42', models.PositiveIntegerField(default=0, help_text='Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, Local ')),
                ('B43', models.PositiveIntegerField(default=0, help_text='Non-Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, Local ')),
                ('B44', models.PositiveIntegerField(default=0, help_text='International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('B45', models.PositiveIntegerField(default=0, help_text='National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('B46', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('B47', models.PositiveIntegerField(default=0, help_text='For every year of participation in service-oriented project in the community', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every year of participation in service-oriented project in the community')),
                ('B48', models.PositiveIntegerField(default=0, help_text='First Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='1.First Level ')),
                ('B49', models.PositiveIntegerField(default=0, help_text='Second Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='2.Second Level ')),
                ('B50', models.PositiveIntegerField(default=0, help_text='Others', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='3.Others ')),
                ('Average', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Demo-Average ')),
                ('Evaluator', models.CharField(max_length=100, verbose_name='Evaluator ')),
                ('Voice_speech', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Voice and Speech')),
                ('Appearance', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Appearance')),
                ('Alertness', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Alertness')),
                ('Ability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Ability to Present Ideas')),
                ('Judgement', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Judgement')),
                ('Emotional_stability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Emotional Stability')),
                ('Self_confidence', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Self-Confidence')),
                ('Interviewer', models.CharField(max_length=100, verbose_name='Interviewer ')),
                ('total', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user ')),
            ],
            options={
                'verbose_name': 'Instructor I - Civil Engineering',
                'verbose_name_plural': 'Instructor I - Civil Engineering',
            },
        ),
        migrations.CreateModel(
            name='Electronics_Engr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=100, verbose_name='First name ')),
                ('mname', models.CharField(max_length=100, verbose_name='Middle name ')),
                ('lname', models.CharField(max_length=100, verbose_name='Last name ')),
                ('date_recorded', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Academic', models.CharField(choices=[('85', 'Doctoral Degree'), ('65', 'Masters Degree'), ('45', 'Bachelors Degree')], default='', help_text='Highest academic degree or educational attainment in the field of study', max_length=4, verbose_name='Highest degree attainment ')),
                ('Special', models.BooleanField(help_text='e.g. Technical/Technician', verbose_name='Special Course ')),
                ('Additional1', models.BooleanField(help_text='Graduate of five-year Engineering Degree', verbose_name='additional 5 points')),
                ('Additional2', models.BooleanField(help_text='Licensure Exam', verbose_name='additional 5 points')),
                ('Degree', models.CharField(choices=[('5', 'Doctorals Degree'), ('4', 'Masters Degree'), ('3', 'Bachelors Degree')], default='', help_text='Additional Equivalent degree earned, related to the present position', max_length=3, verbose_name='Question 1 ')),
                ('Additional3', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned toward a higher approved degree course', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 2 ')),
                ('Additional4', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned on the same level', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 3 ')),
                ('D1', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in a state institution of higher learning', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 4 ')),
                ('D2', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in any public or private educational institution other than SUC', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 5 ')),
                ('D3', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Project Engineer ')),
                ('D4', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Supervising Engineer ')),
                ('D5', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Senior Electronics Engineer ')),
                ('D6', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Junior Electronics Engineer ')),
                ('D7', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Electronics Technician ')),
                ('D8', models.PositiveIntegerField(default=0, help_text='for every cost and timesaving innovation, patented inventions and creative work as well as discovery of educational,technical,scientific and/or cultural value', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 6 ')),
                ('D9', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as original author ')),
                ('D10', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as co-author ')),
                ('D11', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as reviewer ')),
                ('D12', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as translator ')),
                ('D13', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as editor ')),
                ('D14', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as compiler ')),
                ('D15', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='International ')),
                ('D16', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='National/Regional ')),
                ('D17', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('D18', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every Instructional Manual/Audio-Visual Materials ')),
                ('D19', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('D20', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('D21', models.PositiveIntegerField(default=0, help_text='For every training course with a duration of at least (pro-rated for less than a year)', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('D22', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('D23', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('D24', models.PositiveIntegerField(default=0, help_text='For participation as a consultant, expert in any activity of an educational, technological, professional, scientific, or cultural nature (abroad and local) sponsored by the government or other agencies ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('D25', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('D26', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('D27', models.PositiveIntegerField(default=0, help_text='For participation as coordinator,lecturer,resource person or guest speaker in conferences,workshops and/or training', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('D28', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('D29', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('D30', models.PositiveIntegerField(default=0, help_text='For official participation in conferences, seminar, workshops ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('D31', models.PositiveIntegerField(default=0, help_text='For expert services as adviser in doctoral dissertation and masteral thesis and undergraduate thesis ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='expert services')),
                ('D32', models.PositiveIntegerField(default=0, help_text='1/120 hrs ', validators=[django.core.validators.MaxValueValidator(10000)], verbose_name='For certified training')),
                ('D33', models.PositiveIntegerField(default=0, help_text='National', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.Offical ')),
                ('D34', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('D35', models.PositiveIntegerField(default=0, help_text='Member', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.Member ')),
                ('D36', models.CharField(choices=[('0', 'None'), ('3', 'Summa Cum Laude'), ('2', 'Magna Cum Laude'), ('1', 'Cum Laude'), ('0.5', 'With distinction')], default='', max_length=5, verbose_name='For undergraduate academic honors earned:')),
                ('D37', models.PositiveIntegerField(default=0, help_text='Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, International ')),
                ('D38', models.PositiveIntegerField(default=0, help_text='Non-Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, International ')),
                ('D39', models.PositiveIntegerField(default=0, help_text='Competitive National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive National/Regional ')),
                ('D40', models.PositiveIntegerField(default=0, help_text='Non-Competitive, National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='on-Competitive, National/Regional ')),
                ('D41', models.PositiveIntegerField(default=0, help_text='Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, Local ')),
                ('D42', models.PositiveIntegerField(default=0, help_text='Non-Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, Local ')),
                ('D43', models.PositiveIntegerField(default=0, help_text='International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('D44', models.PositiveIntegerField(default=0, help_text='National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('D45', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('D46', models.PositiveIntegerField(default=0, help_text='For every year of participation in service-oriented project in the community', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every year of participation in service-oriented project in the community')),
                ('D47', models.PositiveIntegerField(default=0, help_text='First Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='1.First Level ')),
                ('D48', models.PositiveIntegerField(default=0, help_text='Second Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='2.Second Level ')),
                ('D49', models.PositiveIntegerField(default=0, help_text='Others', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='3.Others ')),
                ('Average', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Demo-Average ')),
                ('Evaluator', models.CharField(max_length=100, verbose_name='Evaluator ')),
                ('Voice_speech', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Voice and Speech')),
                ('Appearance', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Appearance')),
                ('Alertness', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Alertness')),
                ('Ability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Ability to Present Ideas')),
                ('Judgement', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Judgement')),
                ('Emotional_stability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Emotional Stability')),
                ('Self_confidence', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Self-Confidence')),
                ('Interviewer', models.CharField(max_length=100, verbose_name='Interviewer ')),
                ('total', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user ')),
            ],
            options={
                'verbose_name': 'Instructor I - Electronics Communication Engineering',
                'verbose_name_plural': 'Instructor I - Electronics Communication Engineering',
            },
        ),
        migrations.CreateModel(
            name='Mechanical_Engr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=100, verbose_name='First name ')),
                ('mname', models.CharField(max_length=100, verbose_name='Middle name ')),
                ('lname', models.CharField(max_length=100, verbose_name='Last name ')),
                ('date_recorded', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Academic', models.CharField(choices=[('85', 'Doctoral Degree'), ('65', 'Masters Degree'), ('45', 'Bachelors Degree')], default='', help_text='Highest academic degree or educational attainment in the field of study', max_length=4, verbose_name='Highest degree attainment ')),
                ('Special', models.BooleanField(help_text='e.g. Technical/Technician', verbose_name='Special Course ')),
                ('Additional1', models.BooleanField(help_text='Graduate of five-year Engineering Degree', verbose_name='additional 5 points')),
                ('Additional2', models.BooleanField(help_text='Licensure Exam', verbose_name='additional 5 points')),
                ('Degree', models.CharField(choices=[('5', 'Doctorals Degree'), ('4', 'Masters Degree'), ('3', 'Bachelors Degree')], default='', help_text='Additional Equivalent degree earned, related to the present position', max_length=3, verbose_name='Question 1 ')),
                ('Additional3', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned toward a higher approved degree course', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 2 ')),
                ('Additional4', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned on the same level', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 3 ')),
                ('C1', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in a state institution of higher learning', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 4 ')),
                ('C2', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in any public or private educational institution other than SUC', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 5 ')),
                ('C3', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Plant Engineer ')),
                ('C4', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Supervising Engineer ')),
                ('C5', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Production Engineer ')),
                ('C6', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Maintenance Engineer ')),
                ('C7', models.PositiveIntegerField(default=0, help_text='for every cost and timesaving innovation, patented inventions and creative work as well as discovery of educational,technical,scientific and/or cultural value', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 6 ')),
                ('C8', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as original author ')),
                ('C9', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as co-author ')),
                ('C10', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as reviewer ')),
                ('C11', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as translator ')),
                ('C12', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as editor ')),
                ('C13', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as compiler ')),
                ('C14', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='International ')),
                ('C15', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='National/Regional ')),
                ('C16', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('C17', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every Instructional Manual/Audio-Visual Materials ')),
                ('C18', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('C19', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('C20', models.PositiveIntegerField(default=0, help_text='For every training course with a duration of at least (pro-rated for less than a year)', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('C21', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('C22', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('C23', models.PositiveIntegerField(default=0, help_text='For participation as a consultant, expert in any activity of an educational, technological, professional, scientific, or cultural nature (abroad and local) sponsored by the government or other agencies ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('C24', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('C25', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('C26', models.PositiveIntegerField(default=0, help_text='For participation as coordinator,lecturer,resource person or guest speaker in conferences,workshops and/or training', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('C27', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('C28', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('C29', models.PositiveIntegerField(default=0, help_text='For official participation in conferences, seminar, workshops ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('C30', models.PositiveIntegerField(default=0, help_text='For expert services as adviser in doctoral dissertation and masteral thesis and undergraduate thesis ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='expert services')),
                ('C31', models.PositiveIntegerField(default=0, help_text='1/120 hrs ', validators=[django.core.validators.MaxValueValidator(10000)], verbose_name='For certified training')),
                ('C32', models.PositiveIntegerField(default=0, help_text='National', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.Offical ')),
                ('C33', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('C34', models.PositiveIntegerField(default=0, help_text='Member', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.Member ')),
                ('C35', models.CharField(choices=[('0', 'None'), ('3', 'Summa Cum Laude'), ('2', 'Magna Cum Laude'), ('1', 'Cum Laude'), ('0.5', 'With distinction')], default='', max_length=5, verbose_name='For undergraduate academic honors earned:')),
                ('C36', models.PositiveIntegerField(default=0, help_text='Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, International ')),
                ('C37', models.PositiveIntegerField(default=0, help_text='Non-Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, International ')),
                ('C38', models.PositiveIntegerField(default=0, help_text='Competitive National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive National/Regional ')),
                ('C39', models.PositiveIntegerField(default=0, help_text='Non-Competitive, National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='on-Competitive, National/Regional ')),
                ('C40', models.PositiveIntegerField(default=0, help_text='Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, Local ')),
                ('C41', models.PositiveIntegerField(default=0, help_text='Non-Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, Local ')),
                ('C42', models.PositiveIntegerField(default=0, help_text='International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('C43', models.PositiveIntegerField(default=0, help_text='National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('C44', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('C45', models.PositiveIntegerField(default=0, help_text='For every year of participation in service-oriented project in the community', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every year of participation in service-oriented project in the community')),
                ('C46', models.PositiveIntegerField(default=0, help_text='First Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='1.First Level ')),
                ('C47', models.PositiveIntegerField(default=0, help_text='Second Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='2.Second Level ')),
                ('C48', models.PositiveIntegerField(default=0, help_text='Others', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='3.Others ')),
                ('Average', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Demo-Average ')),
                ('Evaluator', models.CharField(max_length=100, verbose_name='Evaluator ')),
                ('Voice_speech', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Voice and Speech')),
                ('Appearance', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Appearance')),
                ('Alertness', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Alertness')),
                ('Ability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Ability to Present Ideas')),
                ('Judgement', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Judgement')),
                ('Emotional_stability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Emotional Stability')),
                ('Self_confidence', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Self-Confidence')),
                ('Interviewer', models.CharField(max_length=100, verbose_name='Interviewer ')),
                ('total', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user ')),
            ],
            options={
                'verbose_name': 'Instructor I - Mechanical Engineering',
                'verbose_name_plural': 'Instructor I - Mechanical Engineering',
            },
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=100, verbose_name='First name ')),
                ('mname', models.CharField(max_length=100, verbose_name='Middle name ')),
                ('lname', models.CharField(max_length=100, verbose_name='Last name ')),
                ('date_recorded', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('Academic', models.CharField(choices=[('85', 'Doctoral Degree'), ('65', 'Masters Degree'), ('45', 'Bachelors Degree')], default='', help_text='Highest academic degree or educational attainment in the field of study', max_length=4, verbose_name='Highest degree attainment ')),
                ('Special', models.BooleanField(help_text='e.g. Technical/Technician', verbose_name='Special Course ')),
                ('Additional1', models.BooleanField(help_text='Graduate of five-year Engineering Degree', verbose_name='additional 5 points')),
                ('Additional2', models.BooleanField(help_text='Licensure Exam', verbose_name='additional 5 points')),
                ('Degree', models.CharField(choices=[('5', 'Doctorals Degree'), ('4', 'Masters Degree'), ('3', 'Bachelors Degree')], default='', help_text='Additional Equivalent degree earned, related to the present position', max_length=3, verbose_name='Question 1 ')),
                ('Additional3', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned toward a higher approved degree course', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 2 ')),
                ('Additional4', models.PositiveIntegerField(default=0, help_text='For every 3 credits earned on the same level', validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Question 3 ')),
                ('F1', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in a state institution of higher learning', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 4 ')),
                ('F2', models.PositiveIntegerField(default=0, help_text='For every full year-time academic service in any public or private educational institution other than SUC', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Question 5 ')),
                ('F3', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Chief Nurse ')),
                ('F4', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Supervisor ')),
                ('F5', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Senior Nurse ')),
                ('F6', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Staff Nurse ')),
                ('F7', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as original author ')),
                ('F8', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as co-author ')),
                ('F9', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as reviewer ')),
                ('F10', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as translator ')),
                ('F11', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as editor ')),
                ('F12', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='as compiler ')),
                ('F13', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='International ')),
                ('F14', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='National/Regional ')),
                ('F15', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('F16', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every Instructional Manual/Audio-Visual Materials ')),
                ('F17', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('F18', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('F19', models.PositiveIntegerField(default=0, help_text='For every training course with a duration of at least (pro-rated for less than a year)', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('F20', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('F21', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('F22', models.PositiveIntegerField(default=0, help_text='For participation as a consultant, expert in any activity of an educational, technological, professional, scientific, or cultural nature (abroad and local) sponsored by the government or other agencies ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('F23', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('F24', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('F25', models.PositiveIntegerField(default=0, help_text='For participation as coordinator,lecturer,resource person or guest speaker in conferences,workshops and/or training', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('F26', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('F27', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('F28', models.PositiveIntegerField(default=0, help_text='For official participation in conferences, seminar, workshops ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('F29', models.PositiveIntegerField(default=0, help_text='For expert services as adviser in doctoral dissertation and masteral thesis and undergraduate thesis ', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='expert services')),
                ('F30', models.PositiveIntegerField(default=0, help_text='1/120 hrs ', validators=[django.core.validators.MaxValueValidator(10000)], verbose_name='For certified training')),
                ('F31', models.PositiveIntegerField(default=0, help_text='National', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.Offical ')),
                ('F32', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Local ')),
                ('F33', models.PositiveIntegerField(default=0, help_text='Member', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.Member ')),
                ('F34', models.CharField(choices=[('0', 'None'), ('3', 'Summa Cum Laude'), ('2', 'Magna Cum Laude'), ('1', 'Cum Laude'), ('0.5', 'With distinction')], default='', max_length=5, verbose_name='For undergraduate academic honors earned:')),
                ('F35', models.PositiveIntegerField(default=0, help_text='Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, International ')),
                ('F36', models.PositiveIntegerField(default=0, help_text='Non-Competitive, International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, International ')),
                ('F37', models.PositiveIntegerField(default=0, help_text='Competitive National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive National/Regional ')),
                ('F38', models.PositiveIntegerField(default=0, help_text='Non-Competitive, National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='on-Competitive, National/Regional ')),
                ('F39', models.PositiveIntegerField(default=0, help_text='Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Competitive, Local ')),
                ('F40', models.PositiveIntegerField(default=0, help_text='Non-Competitive, Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='Non-Competitive, Local ')),
                ('F41', models.PositiveIntegerField(default=0, help_text='International', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='a.International')),
                ('F42', models.PositiveIntegerField(default=0, help_text='National/Regional', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='b.National/Regional')),
                ('F43', models.PositiveIntegerField(default=0, help_text='Local', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='c.Local')),
                ('F44', models.PositiveIntegerField(default=0, help_text='For every year of participation in service-oriented project in the community', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='For every year of participation in service-oriented project in the community')),
                ('F45', models.PositiveIntegerField(default=0, help_text='First Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='1.First Level ')),
                ('F46', models.PositiveIntegerField(default=0, help_text='Second Level', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='2.Second Level ')),
                ('F47', models.PositiveIntegerField(default=0, help_text='Others', validators=[django.core.validators.MaxValueValidator(25)], verbose_name='3.Others ')),
                ('Average', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Demo-Average ')),
                ('Evaluator', models.CharField(max_length=100, verbose_name='Evaluator ')),
                ('Voice_speech', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Voice and Speech')),
                ('Appearance', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Appearance')),
                ('Alertness', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Alertness')),
                ('Ability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Ability to Present Ideas')),
                ('Judgement', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Judgement')),
                ('Emotional_stability', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Emotional Stability')),
                ('Self_confidence', models.PositiveIntegerField(help_text='rate from 1 - 5 (1 is the lowest)', validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Self-Confidence')),
                ('Interviewer', models.CharField(max_length=100, verbose_name='Interviewer ')),
                ('total', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user ')),
            ],
            options={
                'verbose_name_plural': 'Clinical Instructor - Nurse',
            },
        ),
    ]
